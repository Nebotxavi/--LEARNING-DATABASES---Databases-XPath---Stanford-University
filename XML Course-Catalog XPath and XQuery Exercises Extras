#1  Return the course number of the course that is cross-listed as "LING180". 

doc("courses.xml")//Course[contains(Description, 'LING180')]/data(@Number)

#2  Return course numbers of courses that have the same title as some other course. (Hint: You might want to use the "preceding" and "following" navigation axes for this query, which were not covered in the video or our demo script; they match any preceding or following node, not just siblings.) 

doc("courses.xml")//Course[(Title = preceding::Title) or (Title = following::Title)]/data(@Number)

#3  Return course numbers of courses taught by an instructor with first name "Daphne" or "Julie". 

doc("courses.xml")//Course[(descendant::First_Name = 'Daphne') or (descendant::First_Name = 'Julie')]/data(@Number)

#4  Return the number (count) of courses that have no lecturers as instructors. 

# Option 1

count(doc("courses.xml")//Course/Title) - count(doc("courses.xml")//Lecturer/ancestor::Course/Title)

# Option 2

count(doc("courses.xml")//Course/Title) - count(doc("courses.xml")//Lecturer/../preceding::Title[1])

# Option 3

count(doc("courses.xml")//Course[count(descendant::Lecturer)= 0])

#5  Return titles of courses taught by the chair of a department. For this question, you may assume that all professors have distinct last names. 

doc("courses.xml")//Course[descendant::Last_Name = //Chair/descendant::Last_Name]/Title

#6  Return titles of courses that have both a lecturer and a professor as instructors. Return each title only once. 

# Option 1

doc("courses.xml")//Course[(count(descendant::Lecturer) != 0) and (count(descendant::Professor) != 0)]/Title

# Option 2

doc("courses.xml")//Lecturer[../Professor]/../preceding::Title[1]

# 7  Return titles of courses taught by a professor with the last name "Ng" but not by a professor with the last name "Thrun". 

# Option 1

doc("courses.xml")//Last_Name[(. = "Ng") and (following::Last_Name[1] != "Thrun")]/ancestor::Course/Title

# Option 2

doc("courses.xml")//Course[Instructors/Professor/Last_Name = 'Ng' and count(Instructors/Professor[Last_Name = 'Thrun']) = 0]/Title

# 8  Return course numbers of courses that have a course taught by Eric Roberts as a prerequisite. 

# Option 1

doc("courses.xml")//Prereq[. = (//Course[descendant::Last_Name = 'Roberts']/data(@Number))]/ancestor::Course/data(@Number)

# Option 2

doc("courses.xml")//Course[Prerequisites[Prereq = (//Course[descendant::Last_Name = 'Roberts']/data(@Number))]]/data(@Number)
